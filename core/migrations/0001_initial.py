# Generated by Django 5.2.4 on 2025-08-08 13:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Animal Type',
                'verbose_name_plural': 'Animal Types',
            },
        ),
        migrations.CreateModel(
            name='Breed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('average_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('maturity_months', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breeds', to='core.animaltype')),
            ],
            options={
                'verbose_name': 'Breed',
                'verbose_name_plural': 'Breeds',
                'unique_together': {('animal_type', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=10)),
                ('is_contagious', models.BooleanField(default=False)),
                ('prevention_measures', models.TextField(blank=True)),
                ('treatment_advice', models.TextField(blank=True)),
                ('vet_required', models.BooleanField(default=False, help_text='Requires veterinary attention')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('affected_animals', models.ManyToManyField(related_name='diseases', to='core.animaltype')),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
            },
        ),
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('farm_size_acres', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Farmer Profile',
                'verbose_name_plural': 'Farmer Profiles',
            },
        ),
        migrations.CreateModel(
            name='FeedType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('HAY', 'Hay'), ('GRAIN', 'Grain'), ('PELLETS', 'Pellets'), ('SILAGE', 'Silage'), ('PASTURE', 'Pasture'), ('SUPPLEMENT', 'Supplement'), ('CONCENTRATE', 'Concentrate')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('protein_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('energy_mj_per_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('cost_per_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('suitable_for', models.ManyToManyField(related_name='suitable_feeds', to='core.animaltype')),
            ],
            options={
                'verbose_name': 'Feed Type',
                'verbose_name_plural': 'Feed Types',
            },
        ),
        migrations.CreateModel(
            name='FeedingRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_age_months', models.PositiveIntegerField(default=0)),
                ('max_age_months', models.PositiveIntegerField(blank=True, null=True)),
                ('min_weight_kg', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('max_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('purpose', models.CharField(blank=True, choices=[('MEAT', 'Meat Production'), ('MILK', 'Milk Production'), ('EGGS', 'Egg Production'), ('BREEDING', 'Breeding'), ('MIXED', 'Mixed Purpose')], max_length=20)),
                ('daily_amount_kg', models.DecimalField(decimal_places=3, max_digits=6)),
                ('feeding_frequency', models.PositiveIntegerField(default=2, help_text='Times per day')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.animaltype')),
                ('feed_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.feedtype')),
            ],
            options={
                'verbose_name': 'Feeding Recommendation',
                'verbose_name_plural': 'Feeding Recommendations',
            },
        ),
        migrations.CreateModel(
            name='Livestock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('current_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('purpose', models.CharField(choices=[('MEAT', 'Meat Production'), ('MILK', 'Milk Production'), ('EGGS', 'Egg Production'), ('BREEDING', 'Breeding'), ('MIXED', 'Mixed Purpose')], max_length=20)),
                ('status', models.CharField(choices=[('HEALTHY', 'Healthy'), ('SICK', 'Sick'), ('PREGNANT', 'Pregnant'), ('QUARANTINE', 'Quarantine'), ('SOLD', 'Sold'), ('DECEASED', 'Deceased')], default='HEALTHY', max_length=20)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.animaltype')),
                ('breed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.breed')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livestock', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Livestock',
                'verbose_name_plural': 'Livestock',
            },
        ),
        migrations.CreateModel(
            name='MarketPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('date_recorded', models.DateField()),
                ('price_per_kg', models.DecimalField(decimal_places=2, max_digits=8)),
                ('min_weight_kg', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('max_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('quality_grade', models.CharField(choices=[('PREMIUM', 'Premium'), ('GOOD', 'Good'), ('AVERAGE', 'Average'), ('POOR', 'Poor')], default='AVERAGE', max_length=20)),
                ('source', models.CharField(blank=True, help_text='Market or data source', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.animaltype')),
                ('breed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.breed')),
            ],
            options={
                'verbose_name': 'Market Price',
                'verbose_name_plural': 'Market Prices',
                'ordering': ['-date_recorded'],
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diseases', models.ManyToManyField(related_name='symptoms', to='core.disease')),
            ],
            options={
                'verbose_name': 'Symptom',
                'verbose_name_plural': 'Symptoms',
            },
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('treatment_given', models.TextField(blank=True)),
                ('veterinarian_consulted', models.BooleanField(default=False)),
                ('recovery_status', models.CharField(choices=[('ONGOING', 'Ongoing Treatment'), ('RECOVERED', 'Recovered'), ('CHRONIC', 'Chronic Condition'), ('DECEASED', 'Deceased')], default='ONGOING', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('suspected_disease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.disease')),
                ('livestock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='core.livestock')),
                ('symptoms', models.ManyToManyField(blank=True, to='core.symptom')),
            ],
            options={
                'verbose_name': 'Health Record',
                'verbose_name_plural': 'Health Records',
                'ordering': ['-date_recorded'],
            },
        ),
    ]
